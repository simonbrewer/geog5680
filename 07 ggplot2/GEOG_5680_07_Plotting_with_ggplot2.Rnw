\documentclass[aspectratio=169]{beamer}
\usepackage{multirow}
%\usecolortheme{beaver}
%\usecolortheme[RGB={129,3,3}]{structure}
\usetheme{CambridgeUS}
\usecolortheme{seahorse}

% Standard header (will need to change date!)
\title[GEOG 5680 Summer '20]{GEOG 5680\\Introduction to R}
\subtitle[Intro]{07: Plotting with \textbf{ggplot2}}
\author[S. Brewer]{Simon Brewer}
\institute[Univ. Utah]{
  Geography Department\\
  University of Utah\\
  Salt Lake City, Utah 84112\\[1ex]
  \texttt{simon.brewer@geog.utah.edu}
}
\date[May 03, 2020]{May 03, 2020}

\begin{document}
<<setup, include=FALSE>>=
#opts_chunk$set(size = 'footnotesize')
opts_chunk$set(size = 'scriptsize')
@

%--- the titlepage frame -------------------------%
\begin{frame}
  \titlepage
\end{frame}

% %--- Slide 3 ----------------%
% \begin{frame}{Objectives}
% \begin{itemize}
%   \item Introduce \textbf{ggplot2}
%   \item Dataframes for \textbf{ggplot2}
%   \item Examples
% \end{itemize}
% \end{frame}

\section{ggplot2}
%--- Slide 3 ----------------%
\begin{frame}{ggplot2}
\begin{columns}
  \begin{column}{0.6\textwidth}
\begin{itemize}
  \item Based on Leland Wilkinson's Grammar of Graphics
  \begin{itemize}
    \item All data figures can be represented by the same \emph{grammar}
  \end{itemize}
  \item Adapted for R by Hadley Wickham
  \item Provides much easier methods for comparative plots
\end{itemize}
  \end{column}
  \begin{column}{0.4\textwidth}
  \begin{center}
      \includegraphics[width=0.65\textwidth]{./images/wilkinson.png}
  \end{center}
  \end{column}
\end{columns}
\end{frame}

%--- Slide 3 ----------------%
\begin{frame}[fragile]{Base graphics vs. ggplot2}
\begin{columns}
  \begin{column}{0.50\textwidth}
  Base graphics: 8 lines
<<echo=FALSE, message=FALSE>>=
require(ggplot2)
gapdata = read.csv("gapminderData5.csv")
gapdata$year = factor(gapdata$year)
mycont = c("Africa","Americas","Asia","Europe")
par(mfrow=c(2,2))
for (i in 1:length(mycont)) {
  contID = which(gapdata$continent==mycont[i])
  boxplot(lifeExp ~ year, gapdata[contID,],
          xlab="Year",ylab="Life Expectancy", main=mycont[i])
}
par(mfrow=c(1,1))
@
  \end{column}
  \begin{column}{0.5\textwidth}
  ggplot2: 1 (quite complex) line
<<echo=FALSE>>=
myplot = ggplot(subset(gapdata, continent != "Oceania"), aes(x = year, y=lifeExp))
myplot = myplot + geom_boxplot() + facet_wrap(~ continent) 
myplot + ggtitle("Life Expectancy over time") + xlab("Year") + ylab("Life expectancy")
@
  \end{column}
\end{columns}
\end{frame}

\section{Data frames for ggplot2}
\begin{frame}[fragile]{Data frames for ggplot2}
\begin{columns}
  \begin{column}{0.50\textwidth}
    \begin{itemize}
      \item Data is often presented as short and fat tables
      \item Plotting is easier with tall and thin data frames
      \begin{itemize}
        \item Each variable forms a column
        \item Each observation forms a row
      \end{itemize}
    \end{itemize}
  \end{column}
	\begin{column}{0.5\textwidth}
  \begin{center}
      \includegraphics[width=0.95\textwidth]{./images/fat_vs_thin.png}
  \end{center}
  \end{column}
\end{columns}
\end{frame}

\begin{frame}[fragile]{Data frames for ggplot2}
%\Fontvi
\begin{columns}
  \begin{column}{0.50\textwidth}
Short/fat table: good for presenting results
\begin{tabular}{ l | c r }
  \hline
   & TreatA & TreatB \\
  \hline 
  Jane Smith & - & 2 \\
  John Doe & 16 & 11 \\
  Mary Jones & 3 & 1 \\
  \hline
\end{tabular}
\end{column}
  \begin{column}{0.5\textwidth}
Tall/thin dataframe: preferred for plotting
\begin{tabular}{ l | c | r }
  \hline 
  Name & Treat & Result \\
  \hline 
  Jane Smith & a & - \\
  John Doe & a & 16 \\
  Mary Jones & a & 3 \\
  Jane Smith & b & 2 \\
  John Doe & b & 11 \\
  Mary Jones & b & 1 \\
  \hline 
\end{tabular}

\end{column}
\end{columns}
\begin{itemize}
  \item Support package \textbf{reshape2} includes functions to transform between these layouts
  \item \texttt{cast}: thin data frame to table
  \item \texttt{melt}: table to thin data frame 
\end{itemize}
\end{frame}

\section{Grammar of Graphics}
\begin{frame}{Grammar of Graphics}
\begin{columns}
  \begin{column}{0.5\textwidth}
  \begin{itemize}
    \item Theme: font, colors, etc
    \item Coordinates: plotting space
    \item Statistics: summaries/transformation of data
    \item Facet: subplots based on groups
    \item Geometry: shapes used to represent data
    \item Aesthetic: scale used to map data
    \item Data: as data frame
  \end{itemize}
  \end{column}
  \begin{column}{0.5\textwidth}
  \begin{center}
      \includegraphics[width=0.85\textwidth]{./images/gglayers.png}
  \end{center}
  \end{column}
\end{columns}
\end{frame}

% \section{Examples}
% \begin{frame}[fragile]{Simple scatterplot}
% <<echo=FALSE>>=
% data(iris) 
% @
% <<fig.height=4>>=
% myplot = ggplot(data=iris, aes(x=Sepal.Length, y=Petal.Length)) 
% myplot + geom_point()
% @
% \end{frame}
% 
% \begin{frame}[fragile]{Simple scatterplot}
% <<fig.height=4>>=
% myplot = ggplot(data=iris, aes(x=Sepal.Length, y=Petal.Length,
%                                color=Species)) 
% myplot + geom_point()
% @
% \end{frame}
% 
% \begin{frame}[fragile]{Smoothing lines}
% <<fig.height=4, message=FALSE>>=
% myplot = ggplot(data=iris, aes(x=Sepal.Length, y=Petal.Length,
%                                color=Species)) 
% myplot + geom_point() + geom_smooth()
% @
% \end{frame}
% 
% \begin{frame}[fragile]{Themes}
% <<echo=FALSE, message=FALSE>>=
% require(ggthemes)
% myplot = ggplot(data=iris, aes(x=Sepal.Length, y=Petal.Length,
%                                color=Species)) 
% @
% <<fig.height=4, message=FALSE>>=
% myplot + geom_point() + geom_smooth() + 
%   ggtitle("Fisher's Iris Dataset") + theme_bw()
% @
% \end{frame}
% 
% \begin{frame}[fragile]{Themes}
% <<fig.height=4, message=FALSE>>=
% myplot + geom_point() + geom_smooth() + 
%   ggtitle("Fisher's Iris Dataset") + theme_economist()
% @
% \end{frame}
% 
% \begin{frame}[fragile]{Histogram}
% <<fig.height=4, message=FALSE>>=
% myplot = ggplot(data=iris, aes(x=Sepal.Length, fill=Species))
% myplot + geom_histogram(binwidth = 0.1)
% @
% \end{frame}
% 
% \begin{frame}[fragile]{Boxplot}
% <<fig.height=4>>=
% myplot = ggplot(data=iris, aes(x=Species, y=Sepal.Length))
% myplot + geom_boxplot()
% @
% \end{frame}
% 
% \begin{frame}[fragile]{Scales}
% <<fig.height=4>>=
% myplot = ggplot(data=gapdata, aes(x=gdpPercap, y=lifeExp))
% myplot + geom_point()
% @
% \end{frame}
% 
% \begin{frame}[fragile]{Scales}
% <<fig.height=4>>=
% myplot = ggplot(data=gapdata, aes(x=gdpPercap, y=lifeExp))
% myplot + geom_point() + scale_x_log10()
% @
% \end{frame}
% 
% \begin{frame}[fragile]{Facets}
% <<fig.height=4>>=
% myplot = ggplot(data=gapdata, aes(x=gdpPercap, y=lifeExp))
% myplot + geom_point() + scale_x_log10() + facet_wrap(~continent)
% @
% \end{frame}
% 
% \begin{frame}[fragile]{Facets}
% <<fig.height=4>>=
% myplot = ggplot(data=subset(gapdata, continent != "Oceania"), 
%                 aes(x=gdpPercap, y=lifeExp))
% myplot + geom_point() + scale_x_log10() + facet_grid(year~continent)
% @
% \end{frame}
% 
% \begin{frame}[fragile]{Facets}
% <<fig.height=4>>=
% myplot + geom_point() + scale_x_log10() + 
%   facet_grid(year~continent) + geom_smooth(method = "lm")
% @
% \end{frame}
% 
% \begin{frame}[fragile]{ggmap}
% \begin{columns}
% \begin{column}{0.5\textwidth}
%   Google Maps API
% <<echo=FALSE, message=FALSE>>=
% library(ggmap)
% map = get_map(location="Mont Blanc France", zoom=12, 
%               source="google", maptype="terrain")
% ggmap(map)
% @
% \end{column}
% \begin{column}{0.5\textwidth}
%   Stamen Maps API
% <<echo=FALSE, message=FALSE>>=
% map = get_map(location="Ponte Vecchio Florence", zoom=17, 
%               source="stamen", maptype="toner")
% ggmap(map)
% @
% \end{column}
% \end{columns}
% \end{frame}
% 
% %--- Slide ----------------%
% \begin{frame}{Next Class}
% \begin{itemize}
%   \item Lab: Plotting with \textbf{ggplot2}
% 	\item 0402: Statistical models in R
% \end{itemize}
% \end{frame}

\end{document}
