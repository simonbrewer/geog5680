\documentclass[aspectratio=169]{beamer}
\usepackage{multirow}
%\usecolortheme{beaver}
%\usecolortheme[RGB={129,3,3}]{structure}
\usetheme{CambridgeUS}
\usecolortheme{seahorse}

% Standard header (will need to change date!)
\title[GEOG 5680 Summer '20]{GEOG 5680\\Introduction to R}
\subtitle[Intro]{14: Web applications with R and \textbf{Shiny}}
\author[S. Brewer]{Simon Brewer}
\institute[Univ. Utah]{
  Geography Department\\
  University of Utah\\
  Salt Lake City, Utah 84112\\[1ex]
  \texttt{simon.brewer@geog.utah.edu}
}
\date[May 07, 2020]{May 07, 2020}

\begin{document}
<<setup, include=FALSE>>=
#opts_chunk$set(size = 'footnotesize')
opts_chunk$set(size = 'scriptsize')
@

%--- the titlepage frame -------------------------%
\begin{frame}
  \titlepage
\end{frame}

% \section{Objectives}
% %--- Slide 3 ----------------%
% \begin{frame}{Objectives}
% \begin{itemize}
%   \item Introduce Shiny
%   \item Simple example
%   \item Widgets
%   \item Deployment options
% \end{itemize}
% \end{frame}

\section{Shiny}
%--- Slide ----------------%
\begin{frame}[fragile]{What is Shiny?}

\begin{columns}
	\begin{column}{0.5\textwidth}
  \begin{itemize}
    	\item Open source web application for R (from RStudio)
    	\item Turn analysis into interactive web app
    	\item No real knowledge of HTML, CSS or javascript needed
    	\item Examples: https://shiny.rstudio.com/gallery/
  \end{itemize}
	\end{column}
	\begin{column}{0.5\textwidth}
  \begin{center}
      \includegraphics[width=0.65\textwidth]{./images/shiny2.jpg}
  \end{center}
	\end{column}
\end{columns}
\end{frame}

%--- Slide ----------------%
\begin{frame}[fragile]{Shiny applications}
Can use single script (app.R), but for more complex applications, easier to work with two scripts
\begin{columns}
	\begin{column}{0.5\textwidth}
    \begin{itemize}
      \item \emph{ui}: user interface
    	\item Controls user interface
    	\item Layout, appearance
    	\item Widgets for input that changes behavior of app
    	\item Displays output from \emph{server}
    \end{itemize}
	\end{column}
	\begin{column}{0.5\textwidth}
  \begin{itemize}
      \item \emph{server}: server
    	\item Imports parameters from \emph{ui}
    	\item Uses these to run analysis and produces output
    	%\item Most of your R code will go here
    	\item Defines two objects (\texttt{input} and \texttt{output}) which are used to transfer parameters between UI and server
  \end{itemize}
	\end{column}
\end{columns}
\end{frame}

%--- Slide ----------------%
\begin{frame}[fragile]{Shiny applications}
Simple example of *ui.R*:
<<eval=FALSE>>=
library(shiny)
shinyUI(fluidPage(
  titlePanel("Hello Shiny!"),
  sidebarLayout(
    sidebarPanel(
      sliderInput("bins",
                  "Number of bins:",
                  min = 1,
                  max = 50,
                  value = 30)
    ),
    mainPanel(
      plotOutput("distPlot")
    )
  )
))
@
\end{frame}

%--- Slide ----------------%
\begin{frame}[fragile]{Shiny applications}
Simple example of *server.R*:
<<eval=FALSE>>=
library(shiny)
shinyServer(function(input, output) {
  output$distPlot <- renderPlot({
    x    <- faithful[, 2]  # Old Faithful Geyser data
    bins <- seq(min(x), max(x), length.out = input$bins + 1)
    hist(x, breaks = bins, col = 'darkgray', border = 'white')
  })
})
@
\end{frame}

%--- Slide ----------------%
\begin{frame}[fragile]{Shiny applications}
Example output
\end{frame}

%--- Slide ----------------%
\begin{frame}[fragile]{Shiny applications}
  \begin{itemize}
    	\item Easy way to make simple web applications for analysis
    	\item Integrates with RMarkdown
    	\item Can use all standard R add-ons, including \textbf{ggplot2}, etc
    	\item Can be deployed using personal Shiny server or through RStudio's site
  \end{itemize}
\end{frame}

% %--- Slide ----------------%
% \begin{frame}{Next Class}
% \begin{itemize}
%   \item Lab: Web applications
%   \item 0503: Interactive plotting
% \end{itemize}
% \end{frame}

\end{document}
